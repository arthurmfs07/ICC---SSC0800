# -*- coding: utf-8 -*-
"""ex4_ICC_teoria.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d9lXgkn-VE8Gv4wppvhHKGnQqv0qjska
"""

from collections import deque

# rotores e inputs
teste = input()
rotor1 = deque([int(i) for i in input().split()])
rotor2 = deque([int(i) for i in input().split()])
rotor3 = deque([int(i) for i in input().split()])
teste = input()
teste = input()

# inicializando engrenagem e definindo alfabeto
engrenagem = 0
alfabeto = list('abcdefghijklmnopqrstuvwxyz')

while True:
    try:
        mensagem = input()
        # mensagem_decodificada permite construção da mensagem decodificada caractere por caractere
        mensagem_decodificada = ""

        # codificando as letras do alfabeto (lower + upper) em relação aos números dos rotores
        for i in mensagem:
            if i.isalpha():
                is_upper = i.isupper()
                char_lower = i.lower()
                if char_lower in alfabeto:
                    index_start = alfabeto.index(char_lower)

                    index_end = rotor3[rotor2[rotor1[index_start]]]

                    char_decodificado = alfabeto[index_end]
                    if is_upper:
                        char_decodificado = char_decodificado.upper()

                    # Engrenagem
                    rotor1.rotate(-1)
                    engrenagem += 1
                    if engrenagem % 26 == 0:
                        rotor2.rotate(-1)
                    if engrenagem % (26 * 26) == 0:
                        rotor3.rotate(-1)
                else:
                    char_decodificado = i
                mensagem_decodificada += char_decodificado
            else:
                mensagem_decodificada += i

        print(mensagem_decodificada)

    except EOFError:
        break